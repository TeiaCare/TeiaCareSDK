trigger:
  branches:
    include:
    - develop
    - feature/*
    - release/*
    - hotfix/*
    exclude:
    - master
  tags:
    include:
    - v*

variables:
  BUILD_TYPE: Release

jobs:
  - job: Build
    strategy:
      matrix:

        # Full path to MSVC 2022 build environment setup script:
        # https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md#visual-studio-enterprise-2022
        windows2022_msvc2022:
          AGENT: 'windows-2022'
          COMPILER: visual_studio
          COMPILER_VERSION: 17
          SETUP_BUILD_ENV: 'call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
          ACTIVATE_VIRTUAL_ENV: 'call ".venv\Scripts\activate.bat"'

        # windows2022_clang16:
        #   AGENT: 'windows-2022'
        #   COMPILER: clang
        #   COMPILER_VERSION: 16
        #   SETUP_BUILD_ENV: 'call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
        #   ACTIVATE_VIRTUAL_ENV: 'call ".venv\Scripts\activate.bat"'

        # Full path to MSVC 2019 build environment setup script:
        # https://github.com/actions/runner-images/blob/main/images/windows/Windows2019-Readme.md#visual-studio-enterprise-2019
        windows2019_msvc2019:
          AGENT: 'windows-2019'
          COMPILER: visual_studio
          COMPILER_VERSION: 16
          SETUP_BUILD_ENV: 'call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
          ACTIVATE_VIRTUAL_ENV: 'call ".venv\Scripts\activate.bat"'

        # windows2019_clang16:
        #   AGENT: 'windows-2019'
        #   COMPILER: clang
        #   COMPILER_VERSION: 16
        #   SETUP_BUILD_ENV: 'call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
        #   ACTIVATE_VIRTUAL_ENV: 'call ".venv\Scripts\activate.bat"'

        ubuntu2204_gcc13:
          AGENT: 'ubuntu-22.04'
          COMPILER: gcc
          COMPILER_VERSION: 13
          SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
          ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

        ubuntu2204_gcc12:
          AGENT: 'ubuntu-22.04'
          COMPILER: gcc
          COMPILER_VERSION: 12
          SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
          ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

        # ubuntu2204_gcc11:
        #   AGENT: 'ubuntu-22.04'
        #   COMPILER: gcc
        #   COMPILER_VERSION: 11
        #   SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
        #   ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

        ubuntu2204_clang15:
          AGENT: 'ubuntu-22.04'
          COMPILER: clang
          COMPILER_VERSION: 15
          SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
          ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

        # macos13_clang15:
        #   AGENT: 'macOS-13'
        #   COMPILER: clang
        #   COMPILER_VERSION: 15
        #   SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
        #   ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

        # macos12_clang15:
        #   AGENT: 'macOS-12'
        #   COMPILER: clang
        #   COMPILER_VERSION: 15
        #   SETUP_BUILD_ENV: 'echo $(COMPILER) $(COMPILER_VERSION)'
        #   ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

    pool:
      vmImage: $(AGENT)

    steps:
      - task: UsePythonVersion@0
        displayName: Set Python version (3.10)
        inputs:
          versionSpec: '3.10'
          addToPath: true
          architecture: 'x64'

      - script: |
          python3 -m venv .venv
          $(ACTIVATE_VIRTUAL_ENV)
          pip3 install -r scripts/requirements.txt
          python3 scripts/conan/setup.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION)
        displayName: 'Virtual Environment'

      - script: |
          $(ACTIVATE_VIRTUAL_ENV)
          $(SETUP_BUILD_ENV)
          python3 scripts/cmake/configure.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION)
          python3 scripts/cmake/build.py $(BUILD_TYPE)
          python3 scripts/cmake/install.py $(BUILD_TYPE)
        displayName: 'Build'
        env:
          CONAN_USER_HOME: $(Build.SourcesDirectory)

      - script: |
          $(ACTIVATE_VIRTUAL_ENV)
          $(SETUP_BUILD_ENV)
          python3 scripts/cmake/configure.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION) --unit_tests
          python3 scripts/cmake/build.py $(BUILD_TYPE)
          python3 scripts/cmake/install.py $(BUILD_TYPE)
        displayName: 'Unit Tests'
        timeoutInMinutes: 5
        env:
          CONAN_USER_HOME: $(Build.SourcesDirectory)

      - script: |
          $(ACTIVATE_VIRTUAL_ENV)
          $(SETUP_BUILD_ENV)
          python3 scripts/cmake/configure.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION) --benchmarks
          python3 scripts/cmake/build.py $(BUILD_TYPE)
          python3 scripts/cmake/install.py $(BUILD_TYPE)
        displayName: 'Benchmarks'
        timeoutInMinutes: 5
        env:
          CONAN_USER_HOME: $(Build.SourcesDirectory)

      - script: |
          $(ACTIVATE_VIRTUAL_ENV)
          $(SETUP_BUILD_ENV)
          python3 scripts/cmake/configure.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION) --examples
          python3 scripts/cmake/build.py $(BUILD_TYPE)
          python3 scripts/cmake/install.py $(BUILD_TYPE)
        displayName: 'Examples'
        timeoutInMinutes: 5
        env:
          CONAN_USER_HOME: $(Build.SourcesDirectory)

      - script: |
          $(ACTIVATE_VIRTUAL_ENV)
          $(SETUP_BUILD_ENV)
          python3 scripts/conan/create.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION) --install_dir $(Build.SourcesDirectory)
        # cd sdk_package_test
        # python3 build.py $(BUILD_TYPE) $(COMPILER) $(COMPILER_VERSION)
        # install/teiacare_sdk_client_package_test 
        displayName: 'Conan Package'
        timeoutInMinutes: 5
        env:
          CONAN_USER_HOME: $(Build.SourcesDirectory)