name: Coverage

on:
  workflow_dispatch:
  pull_request: 
    branches:
      - 'develop'
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
    tags:
      - 'v*'
  push:
    branches:
      - 'develop'
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
    tags:
      - 'v*'

jobs:
  coverage:
    runs-on: 'ubuntu-22.04'
    name: 'Code Coverage'

    env:
      BUILD_TYPE: Release
      CONAN_USER_HOME: ${{github.workspace}}
      COMPILER: 'gcc'
      COMPILER_VERSION: 12
      SETUP_BUILD_ENV: 'g++-12 --version'
      ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'
          
      - name: Install Dependencies
        run: |
          python -m venv .venv
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          pip install -r scripts/requirements.txt
          python scripts/conan/setup.py ${{env.BUILD_TYPE}} ${{env.COMPILER}} ${{env.COMPILER_VERSION}} --directories sdk/tests

      - name: Build
        run: |
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          ${{env.SETUP_BUILD_ENV}}
          python scripts/cmake/configure.py ${{env.BUILD_TYPE}} ${{env.COMPILER}} ${{env.COMPILER_VERSION}} --coverage
          python scripts/cmake/build.py ${{env.BUILD_TYPE}}

      - name: Run Code Coverage
        continue-on-error: true
        env: 
          GTEST_FILTER: 'test_high_precision_timer.*'
        run: |
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          ${{env.SETUP_BUILD_ENV}}
          python scripts/tools/run_unit_tests.py ${{env.BUILD_TYPE}}
          python scripts/tools/run_coverage.py ${{env.COMPILER}} ${{env.COMPILER_VERSION}}
          echo
          echo ======================================
          echo
          cat ./results/coverage/cobertura.xml

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v4
        with:
          files: './results/coverage/cobertura.xml'
          name: TeiaCareSDK
          slug: TeiaCare/TeiaCareSDK
          token: ${{secrets.CODECOV_TOKEN}}
          verbose: true
          
