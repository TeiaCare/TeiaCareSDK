name: Coverage

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  build:
    runs-on: ${{ matrix.agent }}
    name: '${{ matrix.build_type }} ${{ matrix.compiler }} ${{ matrix.compiler_version }}'
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'Release']
        include:
          - agent: ubuntu-22.04
            compiler: gcc
            compiler_version: '12'
            activate_virtual_env: 'source .venv/bin/activate'
          - agent: ubuntu-22.04
            compiler: clang
            compiler_version: '15'
            activate_virtual_env: 'source .venv/bin/activate'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Cache Virtual Environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('scripts/requirements.txt') }}

      - name: Cache Conan
        uses: actions/cache@v3
        with:
          path: .conan
          key: conan-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('sdk/examples/conanfile.txt', 'sdk/tests/conanfile.txt') }}

      - name: Setup Virtual Environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r scripts/requirements.txt

      - name: Setup Conan
        run: |
          source .venv/bin/activate
          python3 scripts/conan/setup.py ${{ matrix.build_type }} ${{ matrix.compiler }} ${{ matrix.compiler_version }}

      - name: Run Code Coverage
        run: |
          source .venv/bin/activate
          python3 scripts/cmake.py ${{ matrix.build_type }} ${{ matrix.compiler }} ${{ matrix.compiler_version }} --warnings --coverage
          python3 scripts/tools/run_unit_tests.py ${{ matrix.build_type }}
          python3 scripts/tools/run_coverage.py ${{ matrix.compiler }} ${{ matrix.compiler_version }}
        timeout-minutes: 5
        continue-on-error: true
        env:
          CONAN_USER_HOME: ${{ github.workspace }}

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v4
        with:
          files: './results/coverage/cobertura.xml'
          name: TeiaCareSDK
          slug: TeiaCare/TeiaCareSDK
          token: ${{secrets.CODECOV_TOKEN}}
          flags: '${{ matrix.build_type }} ${{ matrix.compiler }} ${{ matrix.compiler_version }}'
