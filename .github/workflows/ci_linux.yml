name: CI Linux

on:
  workflow_dispatch:
  pull_request: 
    branches:
      - 'develop'
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
    tags:
      - 'v*'
  push:
    branches:
      - 'develop'
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{matrix.OS}}
    name: '${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}} - ${{matrix.BUILD_TYPE}}'
    strategy:
      fail-fast: false
      matrix:
        BUILD_TYPE: [Debug, Release]
        COMPILER: [gcc, clang]
        OS: [ubuntu-22.04]
        include:
         - COMPILER: gcc
           COMPILER_VERSION: 12
         - COMPILER: clang
           COMPILER_VERSION: 15

    env:
      BUILD_TYPE: Release
      CONAN_USER_HOME: ${{github.workspace}}
      ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'
          
      - name: Install Dependencies
        shell: bash
        run: |
          python -m venv .venv
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          pip install -r scripts/requirements.txt
          python scripts/conan/setup.py ${{env.BUILD_TYPE}} ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}}

      - name: Build
        shell: bash
        run: |
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          python scripts/cmake/configure.py ${{env.BUILD_TYPE}} ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}}
          python scripts/cmake/build.py ${{env.BUILD_TYPE}}
          python scripts/cmake/install.py ${{env.BUILD_TYPE}}

      - name: Run Unit Tests
        continue-on-error: true
        shell: bash
        run: |
          ${{env.ACTIVATE_VIRTUAL_ENV}}
          python scripts/cmake/configure.py ${{env.BUILD_TYPE}} ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}} --unit_tests
          python scripts/cmake/build.py ${{env.BUILD_TYPE}}
          python scripts/cmake/install.py ${{env.BUILD_TYPE}}
          python scripts/tools/run_unit_tests.py ${{env.BUILD_TYPE}}

      - name: Upload Unit Tests results
        uses: actions/upload-artifact@v2
        with:
          name: '${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}} - ${{matrix.BUILD_TYPE}}'
          path: 'results/unit_tests/unit_tests.xml'
