name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'develop'
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{matrix.OS}}

    strategy:
      matrix: 
        include:
          - NAME: windows2022_msvc2022
            OS: 'windows-2022'
            COMPILER: 'visual_studio'
            COMPILER_VERSION: 17
            SETUP_BUILD_ENV: 'call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
            ACTIVATE_VIRTUAL_ENV: 'call ".venv\Scripts\activate.bat"'
            
          - NAME: ubuntu2204_gcc12
            OS: 'ubuntu-22.04'
            COMPILER: 'gcc'
            COMPILER_VERSION: 12
            SETUP_BUILD_ENV: 'echo gcc 12'
            ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'
            
          - NAME: ubuntu2204_clang15
            OS: 'ubuntu-22.04'
            COMPILER: 'clang'
            COMPILER_VERSION: 15
            SETUP_BUILD_ENV: 'echo clang 15'
            ACTIVATE_VIRTUAL_ENV: 'source .venv/bin/activate'

    env:
      BUILD_TYPE: Release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: Print Configuration
        run: |
          echo OS - ${{matrix.OS}}
          echo Compiler - ${{matrix.COMPILER}}
          echo Version - ${{matrix.COMPILER_VERSION}}
          
      - name: Install Dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r scripts/requirements.txt
          python scripts/conan/setup.py $BUILD_TYPE ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}}

      - name: Build
        run: |
          source .venv/bin/activate
          python scripts/cmake/configure.py $BUILD_TYPE ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}}
          python scripts/cmake/build.py $BUILD_TYPE
          python scripts/cmake/install.py $BUILD_TYPE

      - name: Run Unit Tests
        run: |
          source .venv/bin/activate
          python scripts/cmake/configure.py $BUILD_TYPE ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}} --unit_tests
          python scripts/cmake/build.py $BUILD_TYPE
          python scripts/cmake/install.py $BUILD_TYPE
          python scripts/tools/run_unit_tests.py $BUILD_TYPE
        continue-on-error: true

      - name: Run Code Coverage
        run: |
          source .venv/bin/activate
          python scripts/cmake/configure.py $BUILD_TYPE ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}} --coverage
          python scripts/cmake/build.py $BUILD_TYPE
          python scripts/cmake/install.py $BUILD_TYPE
          python scripts/tools/run_unit_tests.py $BUILD_TYPE
          python scripts/tools/run_coverage.py ${{matrix.COMPILER}} ${{matrix.COMPILER_VERSION}}
        continue-on-error: true
        if: matrix.OS == 'ubuntu-22.04' && success()
